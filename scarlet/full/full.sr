True IS NEW_TYPE() AS_LANGUAGE_ITEM(True)
False IS NEW_TYPE() AS_LANGUAGE_ITEM(False)

Type IS BUILTIN(Type)
Subtype0 IS ANY Type AS_LANGUAGE_ITEM(Subtype0)
Subtype1 IS ANY Type AS_LANGUAGE_ITEM(Subtype1)
Union IS BUILTIN(Union)

true IS True.new AS_LANGUAGE_ITEM(true)
false IS False.new AS_LANGUAGE_ITEM(false)
Bool IS Union(True False) AS_LANGUAGE_ITEM(Bool)

Result IS ANY Type AS_LANGUAGE_ITEM(Result)
condition IS ANY Bool AS_LANGUAGE_ITEM(condition)
true_result IS ANY Result AS_LANGUAGE_ITEM(true_result)
false_result IS ANY Result AS_LANGUAGE_ITEM(false_result)
if_then_else IS BUILTIN(if_then_else)

operand0 IS ANY Bool
operand1 IS ANY Bool

and IS if_then_else(Bool operand0 operand1 false)
or IS if_then_else(Bool operand0 true operand1)
not IS if_then_else(Bool operand0 false true)
xor IS if_then_else(Bool operand0 not(operand1) operand1)

BitSum IS 
NEW_TYPE(
    sum IS ANY Bool 
    carry IS ANY Bool
)

bit0 IS ANY Bool
bit1 IS ANY Bool
bit2 IS ANY Bool

half_bit_sum IS
BitSum.new(
    xor(bit0 bit1)
    and(bit0 bit1)
)

third_bit_partial_sum IS 
half_bit_sum(half_bit_sum.sum bit2)

full_bit_sum IS
BitSum.new(
    third_bit_partial_sum.sum
    or(
        half_bit_sum.carry 
        third_bit_partial_sum.carry
    )
)

Byte IS 
NEW_TYPE(
    b7 IS ANY Bool 
    b6 IS ANY Bool 
    b5 IS ANY Bool 
    b4 IS ANY Bool 
    b3 IS ANY Bool 
    b2 IS ANY Bool 
    b1 IS ANY Bool 
    b0 IS ANY Bool
)

addend0 IS ANY Byte 
addend1 IS ANY Byte

sum0 IS half_bit_sum(addend0.b0 addend1.b0)
sum1 IS full_bit_sum(addend0.b1 addend1.b1 sum0.carry)
sum2 IS full_bit_sum(addend0.b2 addend1.b2 sum1.carry)
sum3 IS full_bit_sum(addend0.b3 addend1.b3 sum2.carry)
sum4 IS full_bit_sum(addend0.b4 addend1.b4 sum3.carry)
sum5 IS full_bit_sum(addend0.b5 addend1.b5 sum4.carry)
sum6 IS full_bit_sum(addend0.b6 addend1.b6 sum5.carry)
sum7 IS full_bit_sum(addend0.b7 addend1.b7 sum6.carry)

sum IS 
Byte.new(
    sum7.sum
    sum6.sum
    sum5.sum
    sum4.sum
    sum3.sum
    sum2.sum
    sum1.sum
    sum0.sum
)
carry IS sum7.carry

f IS false
t IS true

NotBool IS NEW_TYPE()

some_number IS
sum(
    Byte.new(t f f f f f f t)
    Byte.new(f f f f f f f t)
)

Element IS ANY Type
EmptyList IS NEW_TYPE()
NonEmptyList IS NEW_TYPE(
    body IS ANY List
    tail IS ANY Element
)
List IS Union(EmptyList NonEmptyList)

main IS NonEmptyList(Bool).new(EmptyList.new false)
